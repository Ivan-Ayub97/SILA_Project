import sys
import os
import base64
from io import BytesIO
from PyQt5.QtWidgets import (
    QApplication, QWidget, QPushButton, QVBoxLayout, QFileDialog, QLabel, QMessageBox,
    QProgressBar, QComboBox, QListWidget, QHBoxLayout, QDialog,
)
from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5.QtGui import QIcon, QPixmap
from pydub import AudioSegment

class ConversionThread(QThread):
    progress_updated = pyqtSignal(int)
    conversion_finished = pyqtSignal(str)
    error_occurred = pyqtSignal(str)

    def __init__(self, audio_files, output_folder, output_format):
        super().__init__()
        self.audio_files = audio_files
        self.output_folder = output_folder
        self.output_format = output_format
        self.is_running = True

    def run(self):
        total_files = len(self.audio_files)
        for index, file in enumerate(self.audio_files):
            if not self.is_running:
                self.conversion_finished.emit("Cancelled")
                return
            try:
                audio = AudioSegment.from_file(file)
                output_file = self.prepare_output_file(file)
                audio.export(output_file, format=self.output_format)
                self.progress_updated.emit(int(((index + 1) / total_files) * 100))
            except Exception as e:
                self.error_occurred.emit(f"Error converting {file}: {e}")
                return
        self.conversion_finished.emit("Completed")

    def prepare_output_file(self, file):
        ext = self.output_format.lower()
        return os.path.join(self.output_folder, os.path.splitext(os.path.basename(file))[0] + f"_converted.{ext}")

    def stop(self):
        self.is_running = False

class ProgressDialog(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Conversion Progress")
        self.setModal(True)
        self.setFixedSize(300, 100)
        self.setStyleSheet("background-color: #333333; color: #00FF00;")
        layout = QVBoxLayout()
        self.progress_bar = QProgressBar(self)
        self.progress_bar.setAlignment(Qt.AlignCenter)
        layout.addWidget(self.progress_bar)

        self.cancel_button = QPushButton("Cancel Conversion", self)
        self.cancel_button.clicked.connect(self.cancel_conversion)
        layout.addWidget(self.cancel_button)

        self.setLayout(layout)

    def update_progress(self, value):
        self.progress_bar.setValue(value)

    def cancel_conversion(self):
        self.close()

class AudioConverter(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()
        self.audio_files = []
        self.output_folder = ""
        self.conversion_thread = None
        self.setWindowFlag(Qt.FramelessWindowHint)  # Remover bordes de ventana
        self.setAttribute(Qt.WA_TranslucentBackground)  # Fondo transparente

    def initUI(self):
        self.setWindowTitle("ExtenSILA 1.2")
        self.setGeometry(300, 300, 700, 500)
        self.setWindowIcon(self.load_icon())
        layout = QVBoxLayout()

        # Agregar barra de título personalizada
        self.title_bar = QWidget(self)
        self.title_bar.setFixedHeight(30)
        self.title_bar.setStyleSheet("background-color: #444444; color: #00FF00; border-top-left-radius: 10px; border-top-right-radius: 10px;")
        title_layout = QHBoxLayout(self.title_bar)
        self.title_label = QLabel("ExtenSILA 1.2")
        self.title_label.setStyleSheet("color: #00FF00;")
        title_layout.addWidget(self.title_label)

        # Botón minimizar
        self.min_button = QPushButton("-", self.title_bar)
        self.min_button.clicked.connect(self.showMinimized)
        self.min_button.setFixedSize(20, 20)
        self.min_button.setStyleSheet("background-color: #00FF00; color: #000000; border-radius: 5px;")
        title_layout.addWidget(self.min_button)

        # Botón cerrar
        self.close_button = QPushButton("X", self.title_bar)
        self.close_button.clicked.connect(self.close)
        self.close_button.setFixedSize(20, 20)
        self.close_button.setStyleSheet("background-color: #00FF00; color: #000000; border-radius: 5px;")
        title_layout.addWidget(self.close_button)
        title_layout.setContentsMargins(5, 0, 5, 0)
        layout.addWidget(self.title_bar)

        # Agregar componentes de interfaz
        self.label = QLabel("Select one or more audio files:")
        layout.addWidget(self.label)

        import_remove_layout = QHBoxLayout()
        self.import_button = QPushButton("Import Files")
        self.import_button.clicked.connect(self.import_files)
        import_remove_layout.addWidget(self.import_button)

        self.remove_button = QPushButton("Remove Selection")
        self.remove_button.clicked.connect(self.remove_selected_files)
        import_remove_layout.addWidget(self.remove_button)
        layout.addLayout(import_remove_layout)

        self.file_list = QListWidget()
        layout.addWidget(self.file_list)

        self.output_folder_button = QPushButton("Select Output Folder")
        self.output_folder_button.clicked.connect(self.select_output_folder)
        layout.addWidget(self.output_folder_button)

        format_layout = QVBoxLayout()
        self.format_label = QLabel("Output Format:")
        format_layout.addWidget(self.format_label)
        self.format_combo = QComboBox()
        self.format_combo.addItems(["WAV", "MP3", "FLAC"])
        format_layout.addWidget(self.format_combo)
        layout.addLayout(format_layout)

        self.convert_button = QPushButton("Convert")
        self.convert_button.clicked.connect(self.start_conversion)
        layout.addWidget(self.convert_button)

        self.setLayout(layout)
        self.apply_default_theme()

    def load_icon(self):
        # Aquí puedes reemplazar el siguiente string con tu código base64
        icon_base64 = ""  # Código base64 del ícono
        icon_data = base64.b64decode(icon_base64)
        icon_io = BytesIO(icon_data)

        # Crear un QPixmap a partir de los datos de bytes
        pixmap = QPixmap()
        pixmap.loadFromData(icon_io.getvalue())
        
        return QIcon(pixmap)

    def apply_default_theme(self):
        self.setStyleSheet("""
            QWidget { background-color: #222222; color: #00FF00; border-radius: 10px; }
            QPushButton { background-color: #333333; color: #00FF00; border: 1px solid #00FF00; padding: 8px; border-radius: 5px; }
            QPushButton:hover { background-color: #444444; }
            QPushButton:pressed { background-color: #555555; }
            QLabel { color: #00FF00; font-size: 14px; }
            QComboBox { background-color: #333333; color: #00FF00; border: 1px solid #00FF00; padding: 5px; border-radius: 5px; }
            QListWidget { background-color: #222222; color: #00FF00; border: 1px solid #00FF00; }
        """)

    def import_files(self):
        files, _ = QFileDialog.getOpenFileNames(
            self, "Select audio files", "",
            "Archivos de audio (*.mp3 *.wav *.flac *.aac *.ogg *.wma *.m4a)"
        )
        if files:
            new_files = [file for file in files if file not in self.audio_files]
            if new_files:
                self.audio_files.extend(new_files)
                self.file_list.addItems(new_files)
                self.label.setText(f"{len(self.audio_files)} imported file(s).")
            else:
                QMessageBox.warning(self, "Duplicate files", "Some files are already listed.")
        else:
            QMessageBox.warning(self, "Error", "No files selected.")

    def remove_selected_files(self):
        selected_items = self.file_list.selectedItems()
        if not selected_items:
            QMessageBox.warning(self, "Error", "No files selected to delete.")
            return
        for item in selected_items:
            self.audio_files.remove(item.text())
            self.file_list.takeItem(self.file_list.row(item))
        self.label.setText(f"{len(self.audio_files)} remaining file(s).")

    def select_output_folder(self):
        self.output_folder = QFileDialog.getExistingDirectory(self, "Select output folder")
        if self.output_folder:
            QMessageBox.information(self, "Selected folder", f"Selected output folder: {self.output_folder}")
        else:
            QMessageBox.warning(self, "Error", "No output folder selected.")

    def start_conversion(self):
        if not self.audio_files:
            QMessageBox.warning(self, "Error", "Please select audio files to convert.")
            return
        if not self.output_folder:
            QMessageBox.warning(self, "Error", "Please select an output folder.")
            return

        output_format = self.format_combo.currentText().lower()
        self.convert_button.setEnabled(False)

        self.progress_dialog = ProgressDialog()
        self.progress_dialog.setWindowModality(Qt.ApplicationModal)
        self.progress_dialog.show()

        self.conversion_thread = ConversionThread(self.audio_files, self.output_folder, output_format)
        self.conversion_thread.progress_updated.connect(self.progress_dialog.update_progress)
        self.conversion_thread.conversion_finished.connect(self.on_conversion_finished)
        self.conversion_thread.error_occurred.connect(self.on_conversion_error)
        self.progress_dialog.cancel_button.clicked.connect(self.conversion_thread.stop)
        self.conversion_thread.start()

    def on_conversion_finished(self, status):
        self.progress_dialog.close()
        self.convert_button.setEnabled(True)
        if status == "Completed":
            QMessageBox.information(self, "Complete conversion", "File conversion has been completed.")
        else:
            QMessageBox.warning(self, "Conversion canceled", "The conversion has been canceled.")

    def on_conversion_error(self, message):
        QMessageBox.critical(self, "Conversion error", message)
        self.convert_button.setEnabled(True)

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            self.drag_pos = event.globalPos() - self.frameGeometry().topLeft()
            event.accept()

    def mouseMoveEvent(self, event):
        if event.buttons() == Qt.LeftButton:
            self.move(event.globalPos() - self.drag_pos)
            event.accept()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    converter = AudioConverter()
    converter.show()
    sys.exit(app.exec_())